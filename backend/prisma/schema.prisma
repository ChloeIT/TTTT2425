// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Signature {
  id       Int    @id @default(autoincrement())
  userId   Int    @unique
  path     String
  password String
  user     User   @relation(fields: [userId], references: [id])
}

model User {
  id         Int        @id @default(autoincrement())
  fullName   String
  username   String     @unique
  email      String     @unique
  password   String
  department Department @default(MAC_DINH)
  role       Role       @default(USER)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  isActive   Boolean    @default(true)

  exams           Exam[]
  notifications   Notification[]
  sessions        Session[]
  signatures      Signature[]
  forgotPasswords ForgotPassword[]
}

model ForgotPassword {
  id           Int      @id @default(autoincrement())
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  otp          String
  token        String   @unique @default(uuid())
  isActive     Boolean  @default(true)
  attemptCount Int      @default(0)
  createdAt    DateTime @default(now())
  expiredAt    DateTime
}

enum Department {
  LY_LUAN_CO_SO
  XAY_DUNG_DANG
  NHA_NUOC_PHAP_LUAT
  MAC_DINH
}

model Session {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  deviceId  String?
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  loginAt   DateTime @default(now())
  expiredAt DateTime
  isExpired Boolean  @default(false)
}

enum Role {
  BAN_GIAM_HIEU
  TRUONG_KHOA
  GIANG_VIEN_RA_DE
  THU_KY
  USER
}

model Exam {
  id           Int        @id @default(autoincrement())
  title        String
  password     String?
  createdById  Int
  createdBy    User       @relation(fields: [createdById], references: [id])
  status       ExamStatus
  questionFile String
  answerFile   String
  note         String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime?   

  document Document?
}

enum ExamStatus {
  DANG_CHO
  DA_DUYET
  TU_CHOI
  DA_THI
}

model Notification {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  title     String
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Document {
  id           Int      @id @default(autoincrement())
  questionFile String
  answerFile   String
  examId       Int      @unique
  exam         Exam     @relation(fields: [examId], references: [id])
  createdAt    DateTime @default(now())
}
